@page "/login"

@using BankingDashboard.Client.Services
@inject AuthService AuthService
@inject NavigationManager NavigationManager

<h3>Login</h3>

@if (loginFailed)
{
    <div class="alert alert-danger">Invalid username or password.</div>
}

<EditForm Model="loginModel" OnValidSubmit="HandleLogin">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="username">Username</label>
        <InputText id="username" class="form-control" @bind-Value="loginModel.Username" />
        <ValidationMessage For="@(() => loginModel.Username)" />
    </div>

    <div class="form-group">
        <label for="password">Password</label>
        <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
        <ValidationMessage For="@(() => loginModel.Password)" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>
</EditForm>

@code {
    private LoginModel loginModel = new LoginModel();
    private bool loginFailed = false;

    private async Task HandleLogin()
    {
        var result = await AuthService.Login(loginModel);
        if (result)
        {
            NavigationManager.NavigateTo("/dashboard");
        }
        else
        {
            loginFailed = true;
        }
    }

    public class LoginModel
    {
        public string Username { get; set; }
        public string Password { get; set; }
    }
}